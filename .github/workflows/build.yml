
名称：构建

开启：[推送，拉取请求]

工作：

  建造：

    runs-on: ${{ matrix.os }}

    strategy:

      fail-fast: false

      matrix:

        os: [windows-latest]

        build_type: [Release]

        enable_ui: [on]

        include:

          - os: windows-latest

            build_type: Release

            enable_ui: on

    steps:

    - uses: actions/checkout@v3

      和：

        子模块：'递归'

    -名称： ccache

      用途： hendrikmuhs/ccache-action@v1

      如果： runner.os == 'Linux'

      和：

        键： $ { { matrix.os } } -$ { { matrix.enable_ui } }

    -使用： seanmiddleditch/gha-setup-ninja@master

    - uses: ilammy/msvc-dev-cmd@v1

      if: runner.os == 'Windows'

    - name: Install Dependencies

      shell: bash

      run: |

        if [[ "${{ runner.os }}" == "Linux" ]] ; then

          sudo apt-get 更新-qq

          sudo apt-get 安装 -y \

            libx11-dev libxcursor-dev libxi-dev

        菲

    -名称：生成Makefile

      外壳： bash

      运行：|

        如果[  [ “$ {   { runner.os }   } ” == “Windows” ]   ] ; 一

          删除 enable_ccache=off

        别的

          导出 enable_ccache=on

        菲

        curl -L https://github.com/blueloveTH/aseprite/releases/download/v0.01/skia.zip --输出 skia.zip

        7z x skia.zip

        使用 cmake -S 来修复这个问题。-B 构建 -G Ninja \

          -DCMAKE_BUILD_TYPE=$ {   {矩阵.build_type }   } \

禁用 UI配置​​ ​​

          -DENABLE_CCACHE=$enable_ccache \

          -DLAF_BACKEND=skia \

          -DSKIA_DIR=./斯基亚\

          -DSKIA_LIBRARY_DIR=./skia/out/Release-x64 \

          -DSKIA_LIBRARY=./skia/out/Release-x64/skia.lib

    -名称：编译

      外壳： bash

      运行：|

        cd 构建&& 忍者

    -用途：actions/upload-artifact@v3

      和：

        名称: aseprite

        路径：|

          D:/a/aseprite/aseprite/build/bin/data

          D:/a/aseprite/aseprite/build/bin/aseprite.exe

